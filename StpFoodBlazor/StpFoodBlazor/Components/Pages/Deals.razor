@using StpFoodBlazor.Helpers
@using StpFoodBlazor.Services
@using StpFoodBlazor.Models
@inject IDealService HttpDealService
@inject ITimeService TimeService


@page "/"
@attribute [StreamRendering]

<PageTitle>Deals</PageTitle>

<h1>Deals</h1>

@if (deals == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <select class="select-element" id="day-of-week-select" @bind="selectedDayOfWeek">
        <option value="">All</option>
        @foreach (var dow in daysOfWeek)
        {
            <option value="@dow">@dow</option>
        }
    </select>
    <table class="table" id="deals_table">
        <thead>
            <tr>
                <th>Day</th>
                <th>Place</th>
                <th>Deal</th>
            </tr>
        </thead>
        <tbody id="deals_table_body">
            @foreach (var deal in deals)
            {
                <tr>
                    <td>@deal.Day</td>
                    <td>@deal.Name</td>
                    <td>@deal.Deal</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private DealEvent[]? deals;
    private string? selectedDayOfWeek = new TimeService().GetDayOfWeek().ToString();
    private static readonly List<DayOfWeek> daysOfWeek = Enum.GetValues(typeof(DayOfWeek)).Cast<DayOfWeek>().ToList();

    protected override async Task OnInitializedAsync()
    {
        var allDeals = await HttpDealService.GetDealsAsync();
        DealFilter filter = new DealFilter();
        filter.Day = selectedDayOfWeek;
        filter.Deals = allDeals;
        deals = filter.Filter();
    }
}
