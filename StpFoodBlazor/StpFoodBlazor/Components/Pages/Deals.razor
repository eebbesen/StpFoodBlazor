@using StpFoodBlazor.Helpers
@using StpFoodBlazor.Services
@using StpFoodBlazor.Models
@inject IDealService DealServiceImpl
@inject ITimeService TimeServiceImpl


@page "/"
@rendermode InteractiveServer
@attribute [StreamRendering]

<PageTitle>Deals</PageTitle>

<h1>Deals</h1>

@if (deals == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <select class="select-element" id="day-of-week-select"
        @onchange="OnSelectedDayChanged" value="@selectedDayOfWeek">
        <option value="">All</option>
        @foreach (var dow in daysOfWeek)
        {
            <option value="@dow">@dow</option>
        }
    </select>
    <div class="table-responsive">
        <table class="table table-striped" id="deals_table">
            <caption>Downtown Saint Paul deals</caption>
            <thead class="table-dark">
                <tr>
                    <th>Day</th>
                    <th>Place</th>
                    <th>Deal</th>
                </tr>
            </thead>
            <tbody id="deals_table_body">
                @foreach (var deal in deals)
                {
                    <tr>
                        <td>@deal.Day</td>
                        <td>@deal.Name</td>
                        <td>@deal.Deal</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@code {
    private DealEvent[]? deals;
    private DealEvent[]? allDeals = null;
    private string? selectedDayOfWeek = null;
    private static readonly List<DayOfWeek> daysOfWeek = Enum.GetValues(typeof(DayOfWeek)).Cast<DayOfWeek>().ToList();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            allDeals = await DealServiceImpl.GetDealsAsync();
            selectedDayOfWeek = TimeServiceImpl.GetDayOfWeek();
            FilterDeals();
            StateHasChanged();
        }
    }

    void OnSelectedDayChanged(ChangeEventArgs e)
    {
        selectedDayOfWeek = (string?)e.Value;
        FilterDeals();
    }

    private void FilterDeals()
    {
        DealFilter filter = new DealFilter();
        filter.Day = selectedDayOfWeek;
        filter.Deals = allDeals;
        deals = filter.Filter();
    }
}
