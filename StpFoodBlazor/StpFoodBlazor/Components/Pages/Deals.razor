@using StpFoodBlazor.Helpers
@using StpFoodBlazor.Services
@using StpFoodBlazor.Models
@using StpFoodBlazor.Components.Layout;
@inject IDealService DealServiceImpl
@inject ITimeService TimeServiceImpl


@page "/"
@rendermode InteractiveServer
@attribute [StreamRendering]

<PageTitle>Deals</PageTitle>

<div class="container mb-5">
@if (deals == null)
{
    <div class="row">
        <p><em>Loading...</em></p>
    </div>
}
else
{
    <DealFilterBar selectedDayOfWeek="@selectedDayOfWeek" OnSelectedDayChanged="OnSelectedDayChanged"
        happyHour="@happyHour" OnHappyHourChanged="OnHappyHourChanged" alcohol="@alcohol"
        OnAlcoholChanged="OnAlcoholChanged" />

    <DealTableHeader selectedDayOfWeek="@selectedDayOfWeek" />

    <DealTableBody deals="@deals" selectedDayOfWeek="@selectedDayOfWeek" />
}
</div>

@code {
    private DealEvent[]? deals;
    private DealEvent[]? allDeals = null;
    private string? selectedDayOfWeek = null;

    private bool happyHour = false;
    private bool alcohol = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            allDeals = await DealServiceImpl.GetDealsAsync();
            selectedDayOfWeek = TimeServiceImpl.GetDayOfWeek();
            FilterDeals();
            SortDeals();
            StateHasChanged();
        }
    }

    void OnSelectedDayChanged(ChangeEventArgs e)
    {
        selectedDayOfWeek = (string?)e.Value;
        FilterDeals();
        SortDeals();
    }

    void OnHappyHourChanged(ChangeEventArgs e)
    {
        if (e.Value is bool value)
        {
            happyHour = value;
        }
        FilterDeals();
        SortDeals();
    }

    void OnAlcoholChanged(ChangeEventArgs e)
    {
        if (e.Value is bool value)
        {
            alcohol = value;
        }
        FilterDeals();
        SortDeals();
    }

    private void FilterDeals()
    {
        DealFilter filter = new DealFilter();
        filter.Deals = allDeals;
        filter.Day = selectedDayOfWeek;
        filter.HappyHour = happyHour;
        filter.Alcohol = alcohol;
        deals = filter.Filter();
    }

    private void SortDeals()
    {
        deals = DealSorter.Sort(deals);
    }
}
