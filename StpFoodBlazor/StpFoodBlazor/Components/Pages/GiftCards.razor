@using StpFoodBlazor.Helpers
@using StpFoodBlazor.Services
@using StpFoodBlazor.Models
@using StpFoodBlazor.Components.Layout.GiftCards
@inject IGiftCardService GiftCardServiceImpl
@inject ITimeService TimeServiceImpl

@page "/giftcards"
@rendermode InteractiveServer
@attribute [StreamRendering]

<PageTitle>Gift Cards</PageTitle>

<div class="container mb-5">
    @if (giftcards == null)
    {
        <GiftCardsTableHeader />
        <GiftCardsTableBodyPlaceholder/>
    }
    else
    {
        @if (giftcards.Length == 0)
        {
            <GiftCardsNoRecords/>
        }
        else
        {
            <GiftCardsTableHeader />
            <GiftCardsTableBody giftcards="@giftcards"/>
        }
    }
</div>

@code {
    private GiftCard[]? giftcards;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            giftcards = await GiftCardServiceImpl.GetGiftCardsAsync();
            FilterGiftCards();
            SortGiftCards();
            StateHasChanged();
        }
    }

    private void SortGiftCards()
    {
        if (giftcards != null)
        {
            giftcards = GiftCardSorter.Sort(giftcards);
        }
    }

    private void FilterGiftCards()
    {
        GiftCardFilter giftCardFilter = new GiftCardFilter(TimeServiceImpl);
        giftCardFilter.GiftCards = giftcards;
        giftcards = giftCardFilter.Filter();
    }
}
