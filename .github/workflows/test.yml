# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: test

on:
  push:
    branches-ignore:
      - main
  workflow_dispatch:
  workflow_call:

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      ASPNETCORE_APPCONFIG__SHEETID: ${{ secrets.ASPNETCORE_APPCONFIG__SHEETID }}
      ASPNETCORE_APPCONFIG__SHEETSURL: ${{ secrets.ASPNETCORE_APPCONFIG__SHEETSURL }}
      APPCONFIG__HOLIDAYURL: ${{ secrets.APPCONFIG__HOLIDAYURL }}
      TEST_RESULTS_PATH: "/home/runner/work/StpFoodBlazor/StpFoodBlazor/StpFoodBlazor/StpFoodBlazorTest/TestResults"
      TEST_ARTIFACTS_PATH: "/home/runner/work/StpFoodBlazor/StpFoodBlazor/StpFoodBlazor/StpFoodBlazorTest/TestArtifacts"
      MIN_LINE_COVERAGE: 87
      MIN_BRANCH_COVERAGE: 88

    steps:
    - uses: actions/checkout@v4
    # need to uncomment this if you want to run act
    # - uses: browser-actions/setup-chrome@v1
    #   with:
    #     install-chromedriver: true
    #     install-dependencies: true
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    # single step so app server logs will stream to the console during test run
    - name: Test
      run: |
        dotnet run --project StpFoodBlazor/StpFoodBlazor/StpFoodBlazor.csproj --no-build &
        sleep 5  &&
        dotnet test --settings ../StpFoodBlazor/StpFoodBlazor/StpFoodBlazorTest/tests.runsettings \
        --no-build --collect "XPlat Code Coverage"
    - name: ReportGenerator with coverage gate
      uses: danielpalme/ReportGenerator-GitHub-Action@5.4.4
      if: always()
      with:
        reports: "${{ env.TEST_RESULTS_PATH }}/**/coverage.opencover.xml"
        targetdir: "${{ env.TEST_RESULTS_PATH }}/coveragereport"
        reporttypes: Html;Html_Dark
        title: 'StpFoodBlazor Test Coverage'
        tag: '${{ github.run_number }}_${{ github.run_id }}'
        customSettings: 'minimumCoverageThresholds:lineCoverage=${{ env.MIN_LINE_COVERAGE }};minimumCoverageThresholds:branchCoverage=${{ env.MIN_BRANCH_COVERAGE }}'
    - name: Upload HTML coverage report
      uses: actions/upload-artifact@v4
      if: always()
      continue-on-error: true
      with:
        name: coverage_report_html
        path: "${{ env.TEST_RESULTS_PATH }}/coveragereport"
    - name: Upload Opencover XML
      uses: actions/upload-artifact@v4
      if: always()
      continue-on-error: true
      with:
        name: coverage_report_xml
        path: "${{ env.TEST_RESULTS_PATH }}/**/coverage.opencover.xml"
    - name: Upload Selenium screenshots
      uses: actions/upload-artifact@v4
      if: always()
      continue-on-error: true
      with:
        name: selenium_png
        path: "${{ env.TEST_ARTIFACTS_PATH }}/*.png"
    - name: Upload Selenium HTML
      uses: actions/upload-artifact@v4
      if: always()
      continue-on-error: true
      with:
        name: selenium_html
        path: "${{ env.TEST_ARTIFACTS_PATH }}/*.html"
